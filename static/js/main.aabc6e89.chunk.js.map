{"version":3,"sources":["game-info.js","game-status.js","element.js","algorithm.js","game-board.js","game-modal.js","game.js","serviceWorker.js","index.js"],"names":["GameInfo","className","GameStatus","props","render","xIsNext","state","setXIsNext","setState","increaseXScrore","xScore","increaseOScrore","oScore","Component","Element","onClick","style","color","value","backgroundColor","background","winArray","Array","winner","getWinner","isWinnerExists","array","index","getArrayWinFirstElementIndex","i","length","count","j","val","getVerticalArray","array2D","row","col","boardSize","push","getHorizontalArray","getLeftDiagonalArray","startRow","startCol","deltaBackward","nElement","getRightDiagonalArray","algorithm","GameBoard","onClickElement","valueArray","newValueArray","newColorArray","colorArray","onWin","newXIsNext","setIsXNext","renderElement","renderBoard","board","fill","map","this","Modal","setAppElement","document","getElementById","GameModal","isOpen","isModalShow","onAfterOpen","onAfterOpenModal","onRequestClose","hide","overlayClassName","contentLabel","show","Game","ref","gameStatus","gameModal","current","class","React","createRef","Boolean","window","location","hostname","match","ReactDOM","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.aabc6e89.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./game-info.css\";\r\n\r\n// stateless component is define as constant\r\n// instead of a class which extends React.Component\r\nconst GameInfo = () => {\r\n  return (\r\n    <div className=\"game-info\">\r\n      <br />\r\n      <br />\r\n      <hr />\r\n      <p>\r\n        App: Tic-tac-toe (Vietnamese: Caro) - v0.1.0 - written in React/NodeJS - Â©2020\r\n        <br />\r\n        Author: Huynh Thanh Binh - Email: 1653006@student.hcmus.edu.vn \r\n        <br />\r\n        Techniques: react stateful vs. stateless component & react time travel\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GameInfo;\r\n","import React, { Component } from \"react\";\r\nimport \"./game-status.css\";\r\n\r\nclass GameStatus extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      xIsNext: true,\r\n      xScore: 0,\r\n      oScore: 0,\r\n    };\r\n  }\r\n\r\n  render = () => {\r\n    const xIsNext = this.state.xIsNext;\r\n    return (\r\n      <div className=\"game-status\">\r\n        <span className={xIsNext ? \"x-large\" : \"o-large\"}>\r\n          {xIsNext ? \"X\" : \"O\"}\r\n        </span>\r\n        <span className=\"turn-label\">&nbsp;turn</span>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  setXIsNext = (xIsNext) => {\r\n    this.setState({\r\n      xIsNext: xIsNext,\r\n    });\r\n  };\r\n\r\n  increaseXScrore = () => {\r\n    this.setState({\r\n      xScore: this.state.xScore + 1,\r\n    });\r\n  };\r\n\r\n  increaseOScrore = () => {\r\n    this.setState({\r\n      oScore: this.state.oScore + 1,\r\n    });\r\n  };\r\n}\r\n\r\nexport default GameStatus;\r\n","import React from \"react\";\r\nimport \"./element.css\";\r\n\r\n// stateless component is define as constant\r\n// instead of a class which extends React.Component\r\nconst Element = (props) => {\r\n  return (\r\n    <button\r\n      className=\"square\"\r\n      onClick={props.onClick}\r\n      style={{\r\n        color: props.value === \"X\" ? \"dodgerblue\" : \"red\",\r\n        backgroundColor: props.background,\r\n      }}\r\n    >\r\n      {props.value}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Element;\r\n","export const boardSize = 20;\r\nexport const winArray = new Array(5);\r\nlet winner = null;\r\n\r\nexport const getWinner = () => {\r\n\treturn winner;\r\n}\r\n\r\nexport const isWin = (array2D, row, col) => {\r\n\tlet value = array2D[row][col];\r\n\r\n\tif (isWinnerExists(getVerticalArray(array2D, row, col), value)\r\n\t\t|| isWinnerExists(getHorizontalArray(array2D, row, col), value)\r\n\t\t|| isWinnerExists(getLeftDiagonalArray(array2D, row, col), value)\r\n\t\t|| isWinnerExists(getRightDiagonalArray(array2D, row, col), value)) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\treturn false;\r\n}\r\n\r\nconst isWinnerExists = (array, value) => {\r\n\tlet index = getArrayWinFirstElementIndex(array, value);\r\n\tif (index !== -1) {\r\n\t\tfor (let i = 0; i < 5; i++) {\r\n\t\t\twinArray[i] = array[index + i];\r\n\t\t}\r\n\t\twinner = value;\r\n\t\treturn true;\r\n\t}\r\n\treturn false;\r\n}\r\n\r\n// 0 1 2 3 <4> 5 6 7 8 \r\n// X X X X X || O O O O O\r\nconst getArrayWinFirstElementIndex = (array, value) => {\r\n\tif (array.length >= 5) {\r\n\t\tfor (let i = 0; i <= array.length - 5; i++) {\r\n\t\t\tlet count = 0;\r\n\t\t\tfor (let j = i; j < i + 5; j++) {\r\n\t\t\t\tif (array[j].val === value) {\r\n\t\t\t\t\tcount++;\r\n\t\t\t\t\tif (count === 5) {\r\n\t\t\t\t\t\treturn i;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn -1;\r\n}\r\n\r\nconst getVerticalArray = (array2D, row, col) => { // column\r\n\tlet array = [];\r\n\tfor (let i = ((row - 4 > 0) ? (row - 4) : 0); i <= ((row + 4 < boardSize - 1) ? (row + 4) : boardSize - 1); i++) {\r\n\t\tarray.push({ val: array2D[i][col], row: i, col: col });\r\n\t}\r\n\treturn array;\r\n}\r\n\r\nconst getHorizontalArray = (array2D, row, col) => { // row\r\n\tlet array = [];\r\n\tfor (let i = ((col - 4 > 0) ? (col - 4) : 0); i <= ((col + 4 < boardSize - 1) ? (col + 4) : boardSize - 1); i++) {\r\n\t\tarray.push({ val: array2D[row][i], row: row, col: i });\r\n\t}\r\n\treturn array;\r\n}\r\n\r\nconst getLeftDiagonalArray = (array2D, row, col) => { // topLeft --> bottomRight\r\n\tlet array = [];\r\n\tlet startRow;\r\n\tlet startCol;\r\n\tlet deltaBackward;\r\n\tlet nElement;\r\n\r\n\tfor (let i = 4; i >= 0; i--) {\r\n\t\tif (row - i >= 0 && col - i >= 0) {\r\n\t\t\tdeltaBackward = i;\r\n\t\t\tstartRow = row - i;\r\n\t\t\tstartCol = col - i;\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tfor (let i = 4; i >= 0; i--) {\r\n\t\tif (row + i <= boardSize - 1 && col + i <= boardSize - 1) {\r\n\t\t\tnElement = deltaBackward + 1 + i;\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tfor (let i = 0; i < nElement; i++) {\r\n\t\tarray.push({ val: array2D[startRow + i][startCol + i], row: startRow + i, col: startCol + i });\r\n\t}\r\n\r\n\treturn array;\r\n}\r\n\r\nconst getRightDiagonalArray = (array2D, row, col) => { // topRight --> bottomLeft\r\n\tlet array = [];\r\n\tlet startRow;\r\n\tlet startCol;\r\n\tlet deltaBackward;\r\n\tlet nElement;\r\n\r\n\tfor (let i = 4; i >= 0; i--) {\r\n\t\tif (row - i >= 0 && col + i <= boardSize - 1) {\r\n\t\t\tdeltaBackward = i;\r\n\t\t\tstartRow = row - i;\r\n\t\t\tstartCol = col + i;\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tfor (let i = 4; i >= 0; i--) {\r\n\t\tif (row + i <= boardSize - 1 && col - i >= 0) {\r\n\t\t\tnElement = deltaBackward + 1 + i;\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tfor (let i = 0; i < nElement; i++) {\r\n\t\tarray.push({ val: array2D[startRow + i][startCol - i], row: startRow + i, col: startCol - i });\r\n\t}\r\n\r\n\treturn array;\r\n}","import React, { Component } from \"react\";\r\nimport Element from \"./element\";\r\n\r\nimport * as algorithm from \"./algorithm\";\r\n\r\nimport \"./game-board.css\";\r\n\r\nconst boardSize = algorithm.boardSize;\r\nconst winArray = algorithm.winArray;\r\n\r\nclass GameBoard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onWin = this.props.onWin;\r\n    this.setIsXNext = this.props.setIsXNext;\r\n\r\n    this.state = {\r\n      xIsNext: true,\r\n      valueArray: Array(boardSize)\r\n        .fill()\r\n        .map(() => new Array(boardSize).fill(null)),\r\n      colorArray: Array(boardSize)\r\n        .fill()\r\n        .map(() => new Array(boardSize).fill(\"black\")),\r\n    };\r\n  }\r\n\r\n  onClickElement = (row, col) => {\r\n    if (\r\n      this.state.valueArray[row][col] != null ||\r\n      algorithm.getWinner() != null\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    const newValueArray = this.state.valueArray;\r\n    const newColorArray = this.state.colorArray;\r\n    newValueArray[row][col] = this.state.xIsNext ? \"X\" : \"O\";\r\n\r\n    if (algorithm.isWin(newValueArray, row, col)) {\r\n      for (let i = 0; i < 5; i++) {\r\n        newColorArray[winArray[i].row][winArray[i].col] = \"darkkhaki\";\r\n      }\r\n      this.onWin();\r\n    }\r\n\r\n    const newXIsNext =\r\n      algorithm.getWinner() === null ? !this.state.xIsNext : this.state.xIsNext;\r\n\r\n    this.setIsXNext(newXIsNext);\r\n\r\n    this.setState({\r\n      valueArray: newValueArray,\r\n      colorArray: newColorArray,\r\n      xIsNext: newXIsNext,\r\n    });\r\n  };\r\n\r\n  renderElement = (row, col) => {\r\n    return (\r\n      <Element\r\n        value={this.state.valueArray[row][col]}\r\n        onClick={() => this.onClickElement(row, col)}\r\n        background={this.state.colorArray[row][col]}\r\n      />\r\n    );\r\n  };\r\n\r\n  renderBoard = () => {\r\n    const board = [];\r\n    let array2D = new Array(boardSize)\r\n      .fill()\r\n      .map(() => new Array(boardSize).fill(\"\"));\r\n\r\n    for (let row = 0; row < boardSize; row++) {\r\n      for (let col = 0; col < boardSize; col++) {\r\n        array2D[row][col] = this.renderElement(row, col);\r\n      }\r\n\r\n      board.push(<div className=\"board-row\">{array2D[row]}</div>);\r\n    }\r\n    return board;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"game-board\">\r\n        {this.renderBoard()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GameBoard;\r\n","import React, { Component } from \"react\";\r\nimport Modal from \"react-modal\";\r\nimport * as algorithm from \"./algorithm\";\r\nimport \"./game-modal.css\";\r\n\r\nModal.setAppElement(document.getElementById(\"root\"));\r\n\r\nclass GameModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isModalShow: false,\r\n    };\r\n  }\r\n\r\n  render = () => {\r\n    return (\r\n      <Modal\r\n        isOpen={this.state.isModalShow}\r\n        onAfterOpen={this.onAfterOpenModal}\r\n        onRequestClose={this.hide}\r\n        className=\"modal-content\"\r\n        overlayClassName=\"modal-overlay\"\r\n        contentLabel=\"game-modal-dialog\"\r\n      >\r\n        <div>\r\n          The winner is: &nbsp;\r\n          <span\r\n            className={algorithm.getWinner() === \"X\" ? \"x-large\" : \"o-large\"}\r\n          >\r\n            {algorithm.getWinner()}\r\n          </span>\r\n        </div>\r\n        <br />\r\n\r\n        <button onClick={this.hide}>Close</button>\r\n      </Modal>\r\n    );\r\n  };\r\n\r\n  onAfterOpenModal = () => {};\r\n\r\n  show = () => {\r\n    this.setState({\r\n      isModalShow: true,\r\n    });\r\n  };\r\n\r\n  hide = () => {\r\n    this.setState({\r\n      isModalShow: false,\r\n    });\r\n  };\r\n}\r\n\r\nexport default GameModal;\r\n","import React, { Component } from \"react\";\r\nimport GameInfo from \"./game-info\";\r\nimport GameStatus from \"./game-status\";\r\nimport GameBoard from \"./game-board\";\r\nimport GameModal from \"./game-modal\";\r\nimport \"./game.css\";\r\n\r\nclass Game extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.gameStatus = React.createRef();\r\n    this.gameModal = React.createRef();\r\n  }\r\n\r\n  render = () => {\r\n    return (\r\n      <div className=\"game\">\r\n        <div className=\"game-main\">\r\n          <GameStatus ref={this.gameStatus} />\r\n          <GameBoard\r\n            onWin={() => this.gameModal.current.show()}\r\n            setIsXNext={(xIsNext) =>\r\n              this.gameStatus.current.setXIsNext(xIsNext)\r\n            }\r\n          />\r\n          <GameInfo />\r\n          <GameModal ref={this.gameModal} />\r\n        </div>\r\n        <div class=\"game-vr\"></div>\r\n        <div className=\"game-sub\">\r\n          \r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n}\r\n\r\nexport default Game;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Game from './game';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Game />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();"],"sourceRoot":""}